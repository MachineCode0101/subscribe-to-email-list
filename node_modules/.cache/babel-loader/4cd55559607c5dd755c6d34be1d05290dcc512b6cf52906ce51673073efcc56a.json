{"ast":null,"code":"var _jsxFileName = \"/Users/newcomputer/Downloads/Submit-email-main/src/EmailAndButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailInput() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  function handleChange(event) {\n    const inputValue = event.target.value;\n    setEmail(inputValue);\n    validateEmail(inputValue);\n  }\n  function validateEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    setIsValid(emailRegex.test(email));\n  }\n  function handleNotifyClick() {\n    setIsSubmitted(true);\n    if (isValid && isSubmitted) {\n      return alert(\"You will be notified via email!\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input\",\n      type: \"text\",\n      value: email,\n      onChange: handleChange,\n      style: {\n        border: `1px solid ${!isValid && isSubmitted ? 'red' : 'rgb(161, 187, 252)'}`\n      },\n      placeholder: \"Your email address...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), !isValid && isSubmitted && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"invalid-email\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"invalidEmail\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-msg\",\n          children: \"Please provide a valid email address.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"notify-btn\",\n      onClick: handleNotifyClick,\n      style: {\n        boxShadow: '1px 1px 8px rgb(79, 125, 243)'\n      },\n      children: \"Notify Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailInput, \"Ynxky1/5jrqUy7fxOjIncVNpYL8=\");\n_c = EmailInput;\n;\nexport default EmailInput;\nvar _c;\n$RefreshReg$(_c, \"EmailInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EmailInput","_s","email","setEmail","isValid","setIsValid","isSubmitted","setIsSubmitted","handleChange","event","inputValue","target","value","validateEmail","emailRegex","test","handleNotifyClick","alert","children","id","type","onChange","style","border","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","boxShadow","_c","$RefreshReg$"],"sources":["/Users/newcomputer/Downloads/Submit-email-main/src/EmailAndButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction EmailInput() {\n    const [email, setEmail] = useState('');\n    const [isValid, setIsValid] = useState(true);\n    const [isSubmitted, setIsSubmitted] = useState(false);\n  \n    function handleChange(event) {\n      const inputValue = event.target.value;\n      setEmail(inputValue);\n      validateEmail(inputValue);\n    }\n  \n    function validateEmail(email) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      setIsValid(emailRegex.test(email));\n    }\n  \n    function handleNotifyClick() {\n      setIsSubmitted(true);\n      if (isValid && isSubmitted) {\n        return(\n          alert(\"You will be notified via email!\")\n        )\n      }\n    }\n  return (\n    <div>\n      <input\n        id='input'\n        type=\"text\"\n        value={email}\n        onChange={handleChange}\n        style={{\n          border: `1px solid ${!isValid && isSubmitted ? 'red' : 'rgb(161, 187, 252)'}`,\n        }}\n        placeholder=\"Your email address...\"/>\n        {!isValid && isSubmitted && <p id='invalid-email'><p id='invalidEmail'><p id='error-msg'>Please provide a valid email address.</p></p></p>}\n      \n      <button\n      id='notify-btn'\n      onClick={handleNotifyClick}\n      style={{\n        boxShadow: '1px 1px 8px rgb(79, 125, 243)',\n      }}\n      >Notify Me</button>\n    \n    </div>\n  );\n};\n\nexport default EmailInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,SAASW,YAAYA,CAACC,KAAK,EAAE;IAC3B,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrCT,QAAQ,CAACO,UAAU,CAAC;IACpBG,aAAa,CAACH,UAAU,CAAC;EAC3B;EAEA,SAASG,aAAaA,CAACX,KAAK,EAAE;IAC5B,MAAMY,UAAU,GAAG,4BAA4B;IAC/CT,UAAU,CAACS,UAAU,CAACC,IAAI,CAACb,KAAK,CAAC,CAAC;EACpC;EAEA,SAASc,iBAAiBA,CAAA,EAAG;IAC3BT,cAAc,CAAC,IAAI,CAAC;IACpB,IAAIH,OAAO,IAAIE,WAAW,EAAE;MAC1B,OACEW,KAAK,CAAC,iCAAiC,CAAC;IAE5C;EACF;EACF,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MACEoB,EAAE,EAAC,OAAO;MACVC,IAAI,EAAC,MAAM;MACXR,KAAK,EAAEV,KAAM;MACbmB,QAAQ,EAAEb,YAAa;MACvBc,KAAK,EAAE;QACLC,MAAM,EAAG,aAAY,CAACnB,OAAO,IAAIE,WAAW,GAAG,KAAK,GAAG,oBAAqB;MAC9E,CAAE;MACFkB,WAAW,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACpC,CAACxB,OAAO,IAAIE,WAAW,iBAAIP,OAAA;MAAGoB,EAAE,EAAC,eAAe;MAAAD,QAAA,eAACnB,OAAA;QAAGoB,EAAE,EAAC,cAAc;QAAAD,QAAA,eAACnB,OAAA;UAAGoB,EAAE,EAAC,WAAW;UAAAD,QAAA,EAAC;QAAqC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE5I7B,OAAA;MACAoB,EAAE,EAAC,YAAY;MACfU,OAAO,EAAEb,iBAAkB;MAC3BM,KAAK,EAAE;QACLQ,SAAS,EAAE;MACb,CAAE;MAAAZ,QAAA,EACD;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhB,CAAC;AAEV;AAAC3B,EAAA,CA/CQD,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AA+ClB;AAED,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}